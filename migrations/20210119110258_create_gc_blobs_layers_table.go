package migrations

import migrate "github.com/rubenv/sql-migrate"

func init() {
	m := &Migration{
		Migration: &migrate.Migration{
			Id: "20210119110258_create_gc_blobs_layers_table",
			Up: []string{
				`CREATE TABLE IF NOT EXISTS gc_blobs_layers (
					id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
					repository_id bigint NOT NULL,
					layer_id bigint NOT NULL,
					digest bytea NOT NULL,
					CONSTRAINT pk_gc_blobs_layers PRIMARY KEY (digest, id),
					CONSTRAINT fk_gc_blobs_layers_repository_id_and_layer_id_layers FOREIGN KEY (repository_id, layer_id) REFERENCES layers (repository_id, id) ON DELETE CASCADE,
					CONSTRAINT fk_gc_blobs_layers_digest_repository_id_and_layer_id_layers FOREIGN KEY (digest, repository_id, layer_id) REFERENCES layers (digest, repository_id, id) ON DELETE CASCADE,
					CONSTRAINT fk_gc_blobs_layers_digest_blobs FOREIGN KEY (digest) REFERENCES blobs (digest) ON DELETE CASCADE,
					CONSTRAINT unique_gc_blobs_layers_digest_and_layer_id UNIQUE (digest, layer_id)
				)
				PARTITION BY HASH (digest)`,
			},
			Down: []string{
				"DROP TABLE IF EXISTS gc_blobs_layers CASCADE",
			},
		},
	}

	allMigrations = append(allMigrations, m)
}
