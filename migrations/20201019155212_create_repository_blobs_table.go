package migrations

import migrate "github.com/rubenv/sql-migrate"

func init() {
	m := &migrate.Migration{
		Id: "20201019155212_create_repository_blobs_table",
		Up: []string{
			`CREATE TABLE IF NOT EXISTS public.repository_blobs (
				id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
				repository_id bigint NOT NULL,
				created_at timestamp WITH time zone NOT NULL DEFAULT now(),
				blob_digest bytea NOT NULL,
				CONSTRAINT pk_repository_blobs PRIMARY KEY (repository_id, id),
				CONSTRAINT fk_repository_blobs_repository_id_repositories FOREIGN KEY (repository_id) REFERENCES public.repositories (id) ON DELETE CASCADE,
				CONSTRAINT fk_repository_blobs_blob_digest_blobs FOREIGN KEY (blob_digest) REFERENCES public.blobs (digest) ON DELETE CASCADE,
				CONSTRAINT uq_repository_blobs_repository_id_blob_digest UNIQUE (repository_id, blob_digest)
			)
			PARTITION BY HASH (repository_id)`,
			"CREATE INDEX IF NOT EXISTS ix_repository_blobs_repository_id ON public.repository_blobs (repository_id)",
			"CREATE INDEX IF NOT EXISTS ix_repository_blobs_blob_digest ON public.repository_blobs (blob_digest)",
		},
		Down: []string{
			"DROP INDEX IF EXISTS public.ix_repository_blobs_blob_digest CASCADE",
			"DROP INDEX IF EXISTS public.ix_repository_blobs_repository_id CASCADE",
			"DROP TABLE IF EXISTS public.repository_blobs CASCADE",
		},
	}

	allMigrations = append(allMigrations, m)
}
