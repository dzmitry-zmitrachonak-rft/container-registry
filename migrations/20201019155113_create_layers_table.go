package migrations

import migrate "github.com/rubenv/sql-migrate"

func init() {
	m := &migrate.Migration{
		Id: "20201019155113_create_layers_table",
		Up: []string{
			`CREATE TABLE IF NOT EXISTS layers (
				id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
				repository_id bigint NOT NULL,
				manifest_id bigint NOT NULL,
				size bigint NOT NULL,
				created_at timestamp WITH time zone NOT NULL DEFAULT now(),
				media_type_id smallint NOT NULL,
				digest bytea NOT NULL,
				CONSTRAINT pk_layers PRIMARY KEY (repository_id, id),
				CONSTRAINT fk_layers_repository_id_manifest_id_manifests FOREIGN KEY (repository_id, manifest_id) REFERENCES manifests (repository_id, id) ON DELETE CASCADE,
				CONSTRAINT fk_layers_media_type_id_media_types FOREIGN KEY (media_type_id) REFERENCES media_types (id),
				CONSTRAINT fk_layers_digest_blobs FOREIGN KEY (digest) REFERENCES blobs (digest),
				CONSTRAINT uq_layers_repository_id_manifest_id_digest UNIQUE (repository_id, manifest_id, digest)
			)
			PARTITION BY HASH (repository_id)`,
			"CREATE INDEX IF NOT EXISTS ix_layers_repository_id_manifest_id ON layers USING btree (repository_id, manifest_id)",
			"CREATE INDEX IF NOT EXISTS ix_layers_media_type_id ON layers USING btree (media_type_id)",
			"CREATE INDEX IF NOT EXISTS ix_layers_digest ON layers USING btree (digest)",
		},
		Down: []string{
			"DROP INDEX IF EXISTS ix_layers_digest CASCADE",
			"DROP INDEX IF EXISTS ix_layers_media_type_id CASCADE",
			"DROP INDEX IF EXISTS ix_layers_repository_id_manifest_id CASCADE",
			"DROP TABLE IF EXISTS layers CASCADE",
		},
	}

	allMigrations = append(allMigrations, m)
}
