package migrations

import migrate "github.com/rubenv/sql-migrate"

func init() {
	m := &Migration{
		Migration: &migrate.Migration{
			Id: "20210503152056_create_manifest_references_table",
			Up: []string{
				`CREATE TABLE IF NOT EXISTS manifest_references (
					id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
					namespace_id bigint NOT NULL,
					repository_id bigint NOT NULL,
					parent_id bigint NOT NULL,
					child_id bigint NOT NULL,
					created_at timestamp WITH time zone NOT NULL DEFAULT now(),
					CONSTRAINT pk_manifest_references PRIMARY KEY (namespace_id, repository_id, id),
					CONSTRAINT fk_manifest_references_nmspc_id_and_rpsty_id_and_prnt_id_mnfsts FOREIGN KEY (namespace_id, repository_id, parent_id) REFERENCES manifests (namespace_id, repository_id, id) ON DELETE CASCADE,
					CONSTRAINT fk_manifest_references_nmspc_id_and_rpsty_id_and_chld_id_mnfsts FOREIGN KEY (namespace_id, repository_id, child_id) REFERENCES manifests (namespace_id, repository_id, id),
					CONSTRAINT unique_manifest_references_nmspc_id_rpsty_id_prnt_id_chld_id UNIQUE (namespace_id, repository_id, parent_id, child_id),
					CONSTRAINT check_manifest_references_parent_id_and_child_id_differ CHECK (parent_id <> child_id)
				)
				PARTITION BY HASH (namespace_id)`,
				"CREATE INDEX IF NOT EXISTS index_manifest_references_on_nmspc_id_and_rpstry_id_and_prnt_id ON manifest_references USING btree (namespace_id, repository_id, parent_id)",
				"CREATE INDEX IF NOT EXISTS index_manifest_references_on_nmspc_id_and_rpstry_id_and_chld_id ON manifest_references USING btree (namespace_id, repository_id, child_id)",
			},
			Down: []string{
				"DROP INDEX IF EXISTS index_manifest_references_on_nmspc_id_and_rpstry_id_and_chld_id CASCADE",
				"DROP INDEX IF EXISTS index_manifest_references_on_nmspc_id_and_rpstry_id_and_prnt_id CASCADE",
				"DROP TABLE IF EXISTS manifest_references CASCADE",
			},
		},
		PostDeployment: false,
	}

	allMigrations = append(allMigrations, m)
}
