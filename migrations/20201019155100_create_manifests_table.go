package migrations

import migrate "github.com/rubenv/sql-migrate"

func init() {
	m := &migrate.Migration{
		Id: "20201019155100_create_manifests_table",
		Up: []string{
			`CREATE TABLE IF NOT EXISTS public.manifests (
				id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
				repository_id bigint NOT NULL,
				created_at timestamp WITH time zone NOT NULL DEFAULT now(),
				schema_version integer NOT NULL,
				media_type_id smallint NOT NULL,
				configuration_media_type_id smallint,
				configuration_payload bytea,
				configuration_blob_digest bytea,
				digest bytea NOT NULL,
				payload bytea NOT NULL,
				CONSTRAINT pk_manifests PRIMARY KEY (repository_id, id),
				CONSTRAINT fk_manifests_repository_id_repositories FOREIGN KEY (repository_id) REFERENCES public.repositories (id) ON DELETE CASCADE,
				CONSTRAINT fk_manifests_media_type_id_media_types FOREIGN KEY (media_type_id) REFERENCES public.media_types (id),
				CONSTRAINT fk_manifests_configuration_media_type_id_media_types FOREIGN KEY (configuration_media_type_id) REFERENCES public.media_types (id),
				CONSTRAINT fk_manifests_configuration_blob_digest_blobs FOREIGN KEY (configuration_blob_digest) REFERENCES public.blobs (digest),
				CONSTRAINT uq_manifests_repository_id_digest UNIQUE (repository_id, digest)
			)`,
		},
		Down: []string{
			"DROP TABLE IF EXISTS public.manifests CASCADE",
		},
	}

	allMigrations = append(allMigrations, m)
}
