-- Database creation must be done outside a multicommand file.
-- These commands were put in this file only as a convenience.
-- -- object: registry | type: DATABASE --
-- -- DROP DATABASE IF EXISTS registry;
-- CREATE DATABASE registry
-- 	ENCODING = 'UTF8'
-- 	LC_COLLATE = 'en_US.UTF-8'
-- 	LC_CTYPE = 'en_US.UTF-8'
-- 	TABLESPACE = pg_default
-- 	OWNER = postgres;
-- -- ddl-end --
-- 

-- object: public.repositories | type: TABLE --
-- DROP TABLE IF EXISTS public.repositories CASCADE;
CREATE TABLE public.repositories (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	parent_id bigint,
	created_at timestamp with time zone NOT NULL DEFAULT now(),
	updated_at timestamp with time zone,
	name text NOT NULL,
	path text NOT NULL,
	CONSTRAINT pk_repositories PRIMARY KEY (id),
	CONSTRAINT uq_repositories_path UNIQUE (path),
	CONSTRAINT ck_repositories_name_length CHECK ((char_length(name) <= 255)),
	CONSTRAINT ck_repositories_path_length CHECK ((char_length(path) <= 255))

);
-- ddl-end --
-- ALTER TABLE public.repositories OWNER TO postgres;
-- ddl-end --

-- object: public.manifest_configurations | type: TABLE --
-- DROP TABLE IF EXISTS public.manifest_configurations CASCADE;
CREATE TABLE public.manifest_configurations (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	manifest_id bigint NOT NULL,
	size bigint NOT NULL,
	created_at timestamp with time zone NOT NULL DEFAULT now(),
	digest_hex bytea NOT NULL,
	payload bytea NOT NULL,
	media_type text NOT NULL,
	CONSTRAINT pk_manifest_configurations PRIMARY KEY (id),
	CONSTRAINT uq_manifest_configurations_manifest_id UNIQUE (manifest_id),
	CONSTRAINT uq_manifest_configurations_digest_hex UNIQUE (digest_hex),
	CONSTRAINT ck_manifest_configurations_media_type_length CHECK ((char_length(media_type) <= 255))

);
-- ddl-end --
-- ALTER TABLE public.manifest_configurations OWNER TO postgres;
-- ddl-end --

-- object: public.manifests | type: TABLE --
-- DROP TABLE IF EXISTS public.manifests CASCADE;
CREATE TABLE public.manifests (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	created_at timestamp with time zone NOT NULL DEFAULT now(),
	marked_at timestamp with time zone,
	schema_version integer NOT NULL,
	digest_hex bytea NOT NULL,
	payload bytea NOT NULL,
	media_type text NOT NULL,
	CONSTRAINT pk_manifests PRIMARY KEY (id),
	CONSTRAINT uq_manifests_digest_hex UNIQUE (digest_hex),
	CONSTRAINT ck_manifests_media_type_length CHECK ((char_length(media_type) <= 255))

);
-- ddl-end --
-- ALTER TABLE public.manifests OWNER TO postgres;
-- ddl-end --

-- object: public.layers | type: TABLE --
-- DROP TABLE IF EXISTS public.layers CASCADE;
CREATE TABLE public.layers (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	size bigint NOT NULL,
	created_at timestamp with time zone NOT NULL DEFAULT now(),
	marked_at timestamp with time zone,
	digest_hex bytea NOT NULL,
	media_type text NOT NULL,
	CONSTRAINT pk_layers PRIMARY KEY (id),
	CONSTRAINT uq_layers_digest_hex UNIQUE (digest_hex),
	CONSTRAINT ck_layers_media_type_length CHECK ((char_length(media_type) <= 255))

);
-- ddl-end --
-- ALTER TABLE public.layers OWNER TO postgres;
-- ddl-end --

-- object: public.manifest_layers | type: TABLE --
-- DROP TABLE IF EXISTS public.manifest_layers CASCADE;
CREATE TABLE public.manifest_layers (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	manifest_id bigint NOT NULL,
	layer_id bigint NOT NULL,
	created_at timestamp with time zone NOT NULL DEFAULT now(),
	CONSTRAINT pk_manifest_layers PRIMARY KEY (id),
	CONSTRAINT uq_manifest_layers_manifest_id_layer_id UNIQUE (manifest_id,layer_id)

);
-- ddl-end --
-- ALTER TABLE public.manifest_layers OWNER TO postgres;
-- ddl-end --

-- object: public.manifest_list_manifests | type: TABLE --
-- DROP TABLE IF EXISTS public.manifest_list_manifests CASCADE;
CREATE TABLE public.manifest_list_manifests (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	parent_id bigint NOT NULL,
	child_id bigint NOT NULL,
	created_at timestamp with time zone NOT NULL DEFAULT now(),
	CONSTRAINT pk_manifest_list_manifests PRIMARY KEY (id),
	CONSTRAINT uq_manifest_list_manifests_parent_id_child_id UNIQUE (id)

);
-- ddl-end --
-- ALTER TABLE public.manifest_list_manifests OWNER TO postgres;
-- ddl-end --

-- object: public.tags | type: TABLE --
-- DROP TABLE IF EXISTS public.tags CASCADE;
CREATE TABLE public.tags (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	repository_id bigint NOT NULL,
	manifest_id bigint,
	created_at timestamp with time zone NOT NULL DEFAULT now(),
	updated_at timestamp with time zone,
	name text NOT NULL,
	CONSTRAINT pk_tags PRIMARY KEY (id),
	CONSTRAINT uq_tags_name_repository_id UNIQUE (name,repository_id),
	CONSTRAINT ck_tags_name_length CHECK ((char_length(name) <= 255))

);
-- ddl-end --
-- ALTER TABLE public.tags OWNER TO postgres;
-- ddl-end --

-- object: public.repository_manifests | type: TABLE --
-- DROP TABLE IF EXISTS public.repository_manifests CASCADE;
CREATE TABLE public.repository_manifests (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	repository_id bigint NOT NULL,
	manifest_id bigint NOT NULL,
	created_at timestamp with time zone NOT NULL DEFAULT now(),
	CONSTRAINT pk_repository_manifests PRIMARY KEY (id),
	CONSTRAINT uq_repository_manifests_repository_id_manifest_id UNIQUE (repository_id,manifest_id)

);
-- ddl-end --
-- ALTER TABLE public.repository_manifests OWNER TO postgres;
-- ddl-end --

-- object: ix_tags_repository_id | type: INDEX --
-- DROP INDEX IF EXISTS public.ix_tags_repository_id CASCADE;
CREATE INDEX ix_tags_repository_id ON public.tags
	USING btree
	(
	  repository_id
	);
-- ddl-end --

-- object: ix_tags_manifest_id | type: INDEX --
-- DROP INDEX IF EXISTS public.ix_tags_manifest_id CASCADE;
CREATE INDEX ix_tags_manifest_id ON public.tags
	USING btree
	(
	  manifest_id
	);
-- ddl-end --

-- object: ix_repositories_parent_id | type: INDEX --
-- DROP INDEX IF EXISTS public.ix_repositories_parent_id CASCADE;
CREATE INDEX ix_repositories_parent_id ON public.repositories
	USING btree
	(
	  parent_id
	);
-- ddl-end --

-- object: ix_manifest_layers_manifest_id | type: INDEX --
-- DROP INDEX IF EXISTS public.ix_manifest_layers_manifest_id CASCADE;
CREATE INDEX ix_manifest_layers_manifest_id ON public.manifest_layers
	USING btree
	(
	  manifest_id
	);
-- ddl-end --

-- object: ix_manifest_layers_layer_id | type: INDEX --
-- DROP INDEX IF EXISTS public.ix_manifest_layers_layer_id CASCADE;
CREATE INDEX ix_manifest_layers_layer_id ON public.manifest_layers
	USING btree
	(
	  layer_id
	);
-- ddl-end --

-- object: ix_manifest_list_manifests_parent_id | type: INDEX --
-- DROP INDEX IF EXISTS public.ix_manifest_list_manifests_parent_id CASCADE;
CREATE INDEX ix_manifest_list_manifests_parent_id ON public.manifest_list_manifests
	USING btree
	(
	  parent_id
	);
-- ddl-end --

-- object: ix_manifest_list_manifests_child_id | type: INDEX --
-- DROP INDEX IF EXISTS public.ix_manifest_list_manifests_child_id CASCADE;
CREATE INDEX ix_manifest_list_manifests_child_id ON public.manifest_list_manifests
	USING btree
	(
	  child_id
	);
-- ddl-end --

-- object: ix_repository_manifests_repository_id | type: INDEX --
-- DROP INDEX IF EXISTS public.ix_repository_manifests_repository_id CASCADE;
CREATE INDEX ix_repository_manifests_repository_id ON public.repository_manifests
	USING btree
	(
	  repository_id
	);
-- ddl-end --

-- object: ix_repository_manifests_manifest_id | type: INDEX --
-- DROP INDEX IF EXISTS public.ix_repository_manifests_manifest_id CASCADE;
CREATE INDEX ix_repository_manifests_manifest_id ON public.repository_manifests
	USING btree
	(
	  manifest_id
	);
-- ddl-end --

-- object: public.repository_layers | type: TABLE --
-- DROP TABLE IF EXISTS public.repository_layers CASCADE;
CREATE TABLE public.repository_layers (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	repository_id bigint NOT NULL,
	layer_id bigint NOT NULL,
	created_at timestamp with time zone NOT NULL DEFAULT now(),
	CONSTRAINT pk_repository_layers PRIMARY KEY (id),
	CONSTRAINT uq_repository_layers_repository_id_layer_id UNIQUE (repository_id,layer_id)

);
-- ddl-end --
-- ALTER TABLE public.repository_layers OWNER TO postgres;
-- ddl-end --

-- object: ix_repository_layers_repository_id | type: INDEX --
-- DROP INDEX IF EXISTS public.ix_repository_layers_repository_id CASCADE;
CREATE INDEX ix_repository_layers_repository_id ON public.repository_layers
	USING btree
	(
	  repository_id
	);
-- ddl-end --

-- object: ix_repository_layers_layer_id | type: INDEX --
-- DROP INDEX IF EXISTS public.ix_repository_layers_layer_id CASCADE;
CREATE INDEX ix_repository_layers_layer_id ON public.repository_layers
	USING btree
	(
	  layer_id
	);
-- ddl-end --

-- object: fk_repositories_parent_id_repositories | type: CONSTRAINT --
-- ALTER TABLE public.repositories DROP CONSTRAINT IF EXISTS fk_repositories_parent_id_repositories CASCADE;
ALTER TABLE public.repositories ADD CONSTRAINT fk_repositories_parent_id_repositories FOREIGN KEY (parent_id)
REFERENCES public.repositories (id) MATCH SIMPLE
ON DELETE CASCADE ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_manifest_configurations_manifest_id_manifests | type: CONSTRAINT --
-- ALTER TABLE public.manifest_configurations DROP CONSTRAINT IF EXISTS fk_manifest_configurations_manifest_id_manifests CASCADE;
ALTER TABLE public.manifest_configurations ADD CONSTRAINT fk_manifest_configurations_manifest_id_manifests FOREIGN KEY (manifest_id)
REFERENCES public.manifests (id) MATCH FULL
ON DELETE CASCADE ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_manifest_layers_manifest_id_manifests | type: CONSTRAINT --
-- ALTER TABLE public.manifest_layers DROP CONSTRAINT IF EXISTS fk_manifest_layers_manifest_id_manifests CASCADE;
ALTER TABLE public.manifest_layers ADD CONSTRAINT fk_manifest_layers_manifest_id_manifests FOREIGN KEY (manifest_id)
REFERENCES public.manifests (id) MATCH SIMPLE
ON DELETE CASCADE ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_manifest_layers_layer_id_layers | type: CONSTRAINT --
-- ALTER TABLE public.manifest_layers DROP CONSTRAINT IF EXISTS fk_manifest_layers_layer_id_layers CASCADE;
ALTER TABLE public.manifest_layers ADD CONSTRAINT fk_manifest_layers_layer_id_layers FOREIGN KEY (layer_id)
REFERENCES public.layers (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_manifest_list_manifests_parent_id_manifests | type: CONSTRAINT --
-- ALTER TABLE public.manifest_list_manifests DROP CONSTRAINT IF EXISTS fk_manifest_list_manifests_parent_id_manifests CASCADE;
ALTER TABLE public.manifest_list_manifests ADD CONSTRAINT fk_manifest_list_manifests_parent_id_manifests FOREIGN KEY (parent_id)
REFERENCES public.manifests (id) MATCH FULL
ON DELETE CASCADE ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_manifest_list_manifests_child_id_manifests | type: CONSTRAINT --
-- ALTER TABLE public.manifest_list_manifests DROP CONSTRAINT IF EXISTS fk_manifest_list_manifests_child_id_manifests CASCADE;
ALTER TABLE public.manifest_list_manifests ADD CONSTRAINT fk_manifest_list_manifests_child_id_manifests FOREIGN KEY (child_id)
REFERENCES public.manifests (id) MATCH FULL
ON DELETE CASCADE ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tags_repository_id_repositories | type: CONSTRAINT --
-- ALTER TABLE public.tags DROP CONSTRAINT IF EXISTS fk_tags_repository_id_repositories CASCADE;
ALTER TABLE public.tags ADD CONSTRAINT fk_tags_repository_id_repositories FOREIGN KEY (repository_id)
REFERENCES public.repositories (id) MATCH SIMPLE
ON DELETE CASCADE ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tags_manifest_id_manifests | type: CONSTRAINT --
-- ALTER TABLE public.tags DROP CONSTRAINT IF EXISTS fk_tags_manifest_id_manifests CASCADE;
ALTER TABLE public.tags ADD CONSTRAINT fk_tags_manifest_id_manifests FOREIGN KEY (manifest_id)
REFERENCES public.manifests (id) MATCH FULL
ON DELETE CASCADE ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_repository_manifests_repository_id_repositories | type: CONSTRAINT --
-- ALTER TABLE public.repository_manifests DROP CONSTRAINT IF EXISTS fk_repository_manifests_repository_id_repositories CASCADE;
ALTER TABLE public.repository_manifests ADD CONSTRAINT fk_repository_manifests_repository_id_repositories FOREIGN KEY (repository_id)
REFERENCES public.repositories (id) MATCH FULL
ON DELETE CASCADE ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_repository_manifests_manifest_id_manifests | type: CONSTRAINT --
-- ALTER TABLE public.repository_manifests DROP CONSTRAINT IF EXISTS fk_repository_manifests_manifest_id_manifests CASCADE;
ALTER TABLE public.repository_manifests ADD CONSTRAINT fk_repository_manifests_manifest_id_manifests FOREIGN KEY (manifest_id)
REFERENCES public.manifests (id) MATCH FULL
ON DELETE CASCADE ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_repository_layers_repository_id_repositories | type: CONSTRAINT --
-- ALTER TABLE public.repository_layers DROP CONSTRAINT IF EXISTS fk_repository_layers_repository_id_repositories CASCADE;
ALTER TABLE public.repository_layers ADD CONSTRAINT fk_repository_layers_repository_id_repositories FOREIGN KEY (repository_id)
REFERENCES public.repositories (id) MATCH FULL
ON DELETE CASCADE ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_repository_layers_layer_id_layers | type: CONSTRAINT --
-- ALTER TABLE public.repository_layers DROP CONSTRAINT IF EXISTS fk_repository_layers_layer_id_layers CASCADE;
ALTER TABLE public.repository_layers ADD CONSTRAINT fk_repository_layers_layer_id_layers FOREIGN KEY (layer_id)
REFERENCES public.layers (id) MATCH FULL
ON DELETE CASCADE ON UPDATE NO ACTION;
-- ddl-end --
